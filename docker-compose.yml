version: '3.8'

services:
  # Backend API Service
  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: log-agent-backend
    ports:
      - "8000:8000"
    environment:
      - LGA_API_HOST=0.0.0.0
      - LGA_API_PORT=8000
      - LGA_DEBUG=${LGA_DEBUG:-false}
      - LGA_CONFIG_FILE=/app/config/machines.yaml
      - LGA_LOG_LEVEL=${LGA_LOG_LEVEL:-INFO}
    volumes:
      - ./config:/app/config:ro
      - ./data:/app/data
      - ./logs:/app/logs
      - agent_data:/app/data
    networks:
      - log-agent-network
    restart: unless-stopped
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: log-agent-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    networks:
      - log-agent-network
    restart: unless-stopped
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: log-agent-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - log-agent-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PowerShell MCP Server
  powershell-mcp:
    build:
      context: ./mcp_servers/powershell_server
      dockerfile: Dockerfile
    container_name: log-agent-powershell-mcp
    ports:
      - "8001:8001"
    environment:
      - MCP_HOST=0.0.0.0
      - MCP_PORT=8001
    networks:
      - log-agent-network
    restart: unless-stopped
    depends_on:
      - backend

  # SMB MCP Server
  smb-mcp:
    build:
      context: ./mcp_servers/smb_server
      dockerfile: Dockerfile
    container_name: log-agent-smb-mcp
    ports:
      - "8002:8002"
    environment:
      - MCP_HOST=0.0.0.0
      - MCP_PORT=8002
    networks:
      - log-agent-network
    restart: unless-stopped
    depends_on:
      - backend

  # Reverse Proxy (Nginx)
  nginx:
    image: nginx:alpine
    container_name: log-agent-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - log-agent-network
    restart: unless-stopped
    depends_on:
      - frontend
      - backend

networks:
  log-agent-network:
    driver: bridge
    name: log-agent-network

volumes:
  agent_data:
    name: log-agent-data
  redis_data:
    name: log-agent-redis-data